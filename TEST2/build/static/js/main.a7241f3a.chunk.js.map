{"version":3,"sources":["components/ChartView.js","libs/axios.js","App.js","libs/chart.js","index.js"],"names":["ChartView","chartData","options","data","buildChartData","maintainAspectRatio","scales","x","grid","offset","ticks","callback","item","index","this","getLabelForValue","type","position","min","max","labels","datasets","label","backgroundColor","order","borderColor","yAxisID","axiosAPI","axios","create","baseURL","headers","Accept","interceptors","response","use","error","Promise","reject","App","useState","setChartData","useEffect","length","all","get","then","res","result","map","resArray","resData","y","className","ChartJS","register","LinearScale","CategoryScale","BarElement","BarController","PointElement","LineElement","LineController","Legend","Tooltip","ReactDom","render","document","querySelector"],"mappings":"2KAGe,SAASA,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UACnC,OAAO,cAAC,IAAD,CAAOC,QAASA,EAASC,KAAMC,EAAeH,KAGvD,IAAMC,EAAU,CAEdG,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJC,QAAQ,GAEVC,MAAO,CACLC,SAAU,SAASC,EAAMC,EAAOH,GAG9B,OAASG,EAAQ,EAAmC,KAA9BC,KAAKC,iBAAiBH,MAIlD,cAAe,CACbI,KAAM,SACNC,SAAU,OACVC,IAAK,EACLC,IAAK,KAEP,eAAgB,CACdH,KAAM,SACNC,SAAU,QACVC,IAAK,EACLC,IAAK,MAKX,SAASf,EAAeD,GAetB,MAAO,CACLiB,OAfa,CACb,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cAKAC,SAAU,CACR,CACEL,KAAM,MACNb,KAAMA,EAAK,GACXmB,MAAO,QACPC,gBAAiB,UACjBC,MAAO,GAET,CACER,KAAM,MACNb,KAAMA,EAAK,GACXmB,MAAO,SACPC,gBAAiB,UACjBC,MAAO,GAET,CACER,KAAM,MACNb,KAAMA,EAAK,GACXmB,MAAO,QACPC,gBAAgB,UAChBC,MAAO,GAET,CACER,KAAM,OACNb,KAAMA,EAAK,GACXmB,MAAO,QACPC,gBAAgB,QAChBE,YAAY,UACZD,MAAO,EACPE,QAAS,gBAEX,CACEV,KAAM,OACNb,KAAMA,EAAK,GACXmB,MAAO,QACPC,gBAAgB,QAChBE,YAAY,UACZD,MAAO,EACPE,QAAS,kB,YC3FXC,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,2BACTC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAIZL,EAASM,aAAaC,SAASC,KAAI,SAAUD,GAC3C,OAAOA,EAAS/B,QACf,SAAUiC,GACX,OAAOC,QAAQC,OAAOF,MAGTT,QCoBAY,EAhCH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTvC,EADS,KACEwC,EADF,KAyBhB,OAtBAC,qBAAU,WACHzC,EAAU0C,QACbN,QAAQO,IAAI,CACVjB,EAASkB,IAAI,wCACblB,EAASkB,IAAI,wCACblB,EAASkB,IAAI,wCACblB,EAASkB,IAAI,wCACblB,EAASkB,IAAI,0CACZC,MAAK,SAAAC,GACN,IAAMC,EAASD,EAAIE,KAAI,SAAAC,GACrB,OAAOA,EAAS/C,KAAK8C,KAAI,SAAAE,GACvB,MAAO,CACL5C,EAAG4C,EAAQ,GACXC,EAAGD,EAAQ,UAIjBV,EAAaO,QAGhB,CAAC/C,EAAU0C,SAGZ,qBAAKU,UAAU,YAAf,SACE,cAACrD,EAAD,CAAWC,UAAYA,O,aCf7BqD,IAAQC,SACNC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,K,MClBFC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.a7241f3a.chunk.js","sourcesContent":["import React from 'react';\nimport { Chart } from 'react-chartjs-2';\n\nexport default function ChartView ({ chartData }) {\n  return <Chart options={options} data={buildChartData(chartData)} />;\n}\n\nconst options = {\n  // responsive: true, 此為預設\n  maintainAspectRatio: false,\n  scales: {\n    x: {\n      grid: {\n        offset: false,\n      },\n      ticks: {\n        callback: function(item, index, ticks) {\n          // 回傳空字串會保留節點，但 tick 為空\n          // 回傳 undefined 或 null 節點會消失，代表 grid 也不會顯示\n          return !(index % 2) ? this.getLabelForValue(item) : null;\n        }\n      }\n    },\n    'left-y-axis': {\n      type: 'linear',\n      position: 'left',\n      min: 0,\n      max: 1000\n    },\n    'right-y-axis': {\n      type: 'linear',\n      position: 'right',\n      min: 0,\n      max: 10\n    }\n  }\n};\n\nfunction buildChartData(data) {\n  const labels = [\n    '2020-01-01',\n    '2020-01-02',\n    '2020-01-03',\n    '2020-01-04',\n    '2020-01-05',\n    '2020-01-06',\n    '2020-01-07',\n    '2020-01-08',\n    '2020-01-09',\n    '2020-01-10',\n    '2020-01-11',\n  ];\n\n  return {\n    labels,\n    datasets: [\n      { \n        type: 'bar',\n        data: data[0],\n        label: \"First\",\n        backgroundColor: \"#489fb0\",\n        order: 2\n      },\n      {\n        type: 'bar',\n        data: data[1],\n        label: \"Second\",\n        backgroundColor: \"#fab73c\",\n        order: 2\n      },\n      {\n        type: 'bar',\n        data: data[2],\n        label: \"Third\",\n        backgroundColor:\"#6d9c6d\",\n        order: 2\n      },\n      {\n        type: 'line',\n        data: data[3],\n        label: \"Forth\",\n        backgroundColor:\"white\",\n        borderColor:\"#db8181\",\n        order: 1,\n        yAxisID: 'right-y-axis'\n      },\n      {\n        type: 'line',\n        data: data[4],\n        label: \"Fifth\",\n        backgroundColor:\"white\",\n        borderColor:\"#60e6c9\",\n        order: 1,\n        yAxisID: 'right-y-axis'\n      }\n    ]\n  }\n  \n};\n","import axios from 'axios';\n\nconst axiosAPI = axios.create({\n  baseURL: 'https://run.mocky.io/v3/',\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  }\n});\n\naxiosAPI.interceptors.response.use(function (response) {\n  return response.data;\n}, function (error) {\n  return Promise.reject(error);\n});\n\nexport default axiosAPI;","import { useEffect, useState } from 'react';\nimport ChartView from './components/ChartView';\nimport axiosAPI from './libs/axios';\n\nconst App = () => {\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    if (!chartData.length) {\n      Promise.all([\n        axiosAPI.get('a34c5fe1-6025-4c9d-8402-5c777b685476'),\n        axiosAPI.get('b6b3ee44-03f2-4d3d-84e1-1f2e68be6f7e'),\n        axiosAPI.get('8e7a5232-2974-4621-a818-0985e623169e'),\n        axiosAPI.get('9ef80280-6c04-4d01-ae55-e3846ba758de'),\n        axiosAPI.get('7826ab76-0be2-4103-8377-9a2669942868')\n      ]).then(res => {\n        const result = res.map(resArray => {\n          return resArray.data.map(resData => {\n            return {\n              x: resData[0],\n              y: resData[1]\n            }\n          })\n        })\n        setChartData(result);\n      });\n    }\n  }, [chartData.length]);\n  \n  return (\n    <div className=\"container\">\n      <ChartView chartData={ chartData } />\n    </div>\n  );\n}\n\nexport default App;","// \nimport {\n  Chart as ChartJS,\n  LinearScale,\n  CategoryScale,\n  BarElement,\n  BarController,\n  PointElement,\n  LineElement,\n  LineController,\n  Legend,\n  Tooltip\n} from 'chart.js';\n\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(\n  LinearScale,\n  CategoryScale,\n  BarElement,\n  BarController,\n  PointElement,\n  LineElement,\n  LineController,\n  Legend,\n  Tooltip\n);","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nimport './libs/chart';\nimport './assets/style.css';\n\nReactDom.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}